Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:28530): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (171 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
Error: No such service: portainer
Service: portainer could not be removed, or does not exists
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
portainer
Volume: portainer was removed
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
No secrets to remove
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
Error response from daemon: rpc error: code = AlreadyExists desc = secret PORTAINER_PASSWORD already exists
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:29375): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (235 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
Error: No such service: portainer
Service: portainer could not be removed, or does not exists
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
portainer
Volume: portainer was removed
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
hlkgnsuj95bupe2ghmzawqqsx
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
js414wi43g1u4s03rgj5l7gr7
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:30623): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (205 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [9eede7a13be320931990ee29aa6d249cdc62403ec136c1857d88d04c280eb440]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
dc21aze9u21ontud20i2jfyar
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
r8fda50lso8xvtqkib1giuw9z
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:31917): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (177 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [c13243b24967b5e48abafde430ca69ff8accb4e681be96382d6792ee9c713078]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
173ejz72ooao7km9gdbismzvt
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:838): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 1s (56.4 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
portainer
Volume: portainer was removed
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
kop87k24lhbq6ml87ei6e62f8
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
sp3fzwef4azlem4j9lnkk37d0
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:2166): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (179 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0a811a7bcbb247f5ccd575a82e18874b4f09c64628c470f253efcc508095cb94]
Volume: portainer was not removed or failed
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
lewdvixu36hv9c7hdq1xzj3vj
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
pd9fb9clib101hw02op4n4dtl
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:3534): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 102 kB in 0s (168 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [4072c2e5c5d5b9b8dc62df716cf1f148b5b58927ffa8af536a4a394ba9868565]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
vmor002jcc9od2wdyo0pp8dz9
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
v4bffh4e60ld3mecya2dsgitx
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:5216): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (269 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [056ed4eedf6411d94952ada527d8e055bb09cbfc7bd63cbf4f314246e57c7937]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
kv15lctn7arrwk3rwu0q633ur
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
mnofs8ox5o3aatxu9vj09f9rr
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:6569): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (298 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0bc9e1c184a1d96844b37b0ba648f0c466050439acc37e3ad75bab42714517f0]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
5qh9hd346l32e6fusiajszfcx
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ine5p8048asc6586kniaurkif
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:7849): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (312 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [f5223a20ecc64728e10922d4a34f691214cd3a576b4f3cee592273b322f76d4e]
Removing networks listed in: assets/networks
No networks to remove
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
Creating networks listed in: assets/networks
No networks to create
Creating docker secrets listed in: assets/secrets
lyqvddj5y81obnmumhy8si8cc
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
vkcozueb7dyqxkuiqn6b8jlkg
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:9161): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (308 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [170f1c31c40028f6e2b6a406a6244c84870f13043597ac0b23014fc579d9ce44]
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
z0dm8llg0xaxi8xv199tphyqm
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
u3dfqaqxtmgj4ob99za005qg7
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:10614): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (271 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [5e892f3daff90dd6b0bd3433479e96dc4422dffb94d7c0c51b148b3fb93cf1fc]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xplkma6o3qcglq7nqdk6wwhc3
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
od41kff6okrofe4v4kwusghoc
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:7 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]

** (appstreamcli:12180): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (114 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0bfaa1f843976e9f70931feb71265f6539ae8ad01980c2a3ba26e5d555779640]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
wlxngyleuna6py78ummgtm4x9
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
qvuckq6eyuei23etknj0m1lna
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:13485): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (317 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [9196ce450eb32ae3064d25899951a17c97c8c722f182bf3c0e889a2b667dcc39]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
jely54d0uhwtrevj3js0iyy7l
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ui4hkcst8ywsczm9fqziuduir
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
ssh-copy-id 
-o LogLevel=error -o ConnectTimeout=5 -o IdentitiesOnly=yes -o userknownhostsfile=/dev/null -o stricthostkeychecking=no -i /home/pi/.ssh/id_rsa.pub ubuntu@192.168.2.215
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
ssh-copy-id 
-o LogLevel=error -o ConnectTimeout=5 -o IdentitiesOnly=yes -o userknownhostsfile=/dev/null -o stricthostkeychecking=no -i /home/pi/.ssh/id_rsa.pub ubuntu@192.168.2.215
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:15488): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (293 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:15983): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (301 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [033708a250b2868983683244ef8b057d504bb000aacfd3f0a7e2b9bf811e0954]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
axjdqqojg3uc2rbtaulhiu6s7
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
s3vnv19c5od1w8rpmifftbncf
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:17282): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (305 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [9aa2c4ccb052264783787c11e1603ca39f39a52bb8ddc2609f1dfb07f13f97d5]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
kghsb7hp919aidzw29vu4295u
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
lg8zatmvbaxf55k2vgd32yenz
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:18662): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (293 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [89203e9cde041f4b03416953e02138fc8abcb2b927cbcd17422f2f9646cb3e19]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
4pwwjnfdhv55jqsk3dtz4bnt6
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
zl51sfl0tv7zxbi02mxlpkxm5
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:20035): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (287 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [123a6a40e7b366305c01e284d542cfe3a625ba79ca2fa444e62b5a4aa0fcb117]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
8qc8wfzpw3jwf4d0r4gpyhkpe
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
5h9o8xwp2ol2l3pwh6b8oo052
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.


  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no: No such file or directory
-r: No such file or directory
scp: protocol error: expected control record
sshpass: Failed to run command: No such file or directory
sshpass: Failed to run command: No such file or directory
sshpass: Failed to run command: No such file or directory
sshpass: Failed to run command: No such file or directory
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.


  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no: No such file or directory
-r: No such file or directory
scp: protocol error: expected control record
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:5 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.5 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [77.2 kB]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:9 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [80.2 kB]
Hit:10 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:11 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:12 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [716 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [307 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [227 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [582 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [191 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [265 kB]
Get:18 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,888 B]

** (appstreamcli:21708): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 2,775 kB in 6s (398 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [a0316c6ae82541346f46c1e3362ebedc5bd1616cd7eac986d58143d970f16519]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
8xrsc7ajg9lxz2jccohzue4jg
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ocakpyyi09nvn37b89z9bj0yk
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:23027): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [275522dfd5bfdcff26293a1ffebf434ac3cdea57e521f99a305ca65b554478d2]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
8y3n8jznjmh7dpvem10nzwvf7
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
uop0x3non5l5nf6pu2jgb2t7n
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

bash: ubuntu@192.168.2.215: command not found
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:24497): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [67735ca440ff7812fc803955cf7b6f03ef83afe9c1a6969994e2df05a241359a]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
idelt587arqjv03e0zlxk3xxo
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
j6jaqh3a57mdagota4ubr6tmf
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:25806): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [2c111878c12f501ac7a1e2587fdcce170a3dabe1f62345fc76f1485f355ab785]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
k0npvsrwl4h125cfvx66z0ize
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
in9d3k0ccra6qzmuhhjdz7vtm
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
/home/pi/rpi_cluster/ssh/setup.sh not supported
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:27123): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [919e578068dbd2053f3fb464d2fa161567a3b6a4e077210ff9091118a0fd7a58]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
5vp6cav599tg8e1anyzfdcjp8
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
x84yjq85617phsyx5thrwsvmm
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:28451): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [6b500f159235c4c01fb8bae94e5fc5fc612e8e4c7a55a11802a025bc9a90e2bd]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
v9aslfc36affy26zlpmwb38oj
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
gser2upu7yh3o47efsujok53m
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:29757): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [cb51ef990926447a16647670ceb4165a4bc4375457cf62c2e905749a10ac1bfa]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
vxzui7lxux6ufu3naqfbzpo2f
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ijw1v2cycf6mau9t9vrs47315
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Error response from daemon: rpc error: code = Unknown desc = name conflicts with an existing object
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://security.ubuntu.com/ubuntu xenial-security InRelease

** (appstreamcli:31086): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [e9100b991d6323757cf61fc8b286013adb080239c78392775b162502d64c5319]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
vwwloah4orzjtnn73eup9pqfv
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
lo544qj6jt6oevvofg9vhbfyr
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:32404): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0b81e5ba7166281eeab9d033a725be90221ba91a604de7e8e614b4147226b4ea]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
pfuqrpinn948c1xskbp828ew2
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
p8rdqhasmqpdhlry5837mzmxz
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 https://download.docker.com/linux/ubuntu xenial InRelease [65.8 kB]
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:1253): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 65.8 kB in 0s (144 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 349 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [7d787a4161c789d17885f81822c3060624903d2e27782be318a5d492f57b57b6]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
lih6stqnevr468d2a7ceaekl9
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
qew8yzllfgzevw10prhf25jca
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.5 kB]
Get:7 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [76.7 kB]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:9 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [85.1 kB]
Hit:10 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:11 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:12 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [716 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [307 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [219 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [191 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [260 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,892 B]

** (appstreamcli:4240): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 2,184 kB in 1s (1,095 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [91b8659493e4f7c0a3e11fccd1f702ee79dae359a1d5e770c7432d3f3c6a5c89]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
evm77zz651ncf05axwm1ypt14
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
xe04r2pejgrsuy63pl5ulmras
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:5799): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [1b73ecdcdc9ac7b39fe9291e1fc5ae9cefe2edb5bca97a9d53b01a9d5da59213]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
g9aguzn9c01rx77t9wxamtmhp
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
z2nrcth5fi3d3479q5vjn3fo4
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:7115): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [34a5b577049a5031877c6827d9c19993910fc565afe6dcb626c857b42b1750d5]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
j1xyojl2tvdl9zkdx8awhz7qe
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
xsmmo932ew5n6ams8mcygyci3
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:8572): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [44bfccab62a795b5c51b8e94c1a846ad164526a3f586bd4a519604406d4f173f]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xaaznx972vslkd3m6rtfm3ydm
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ela6os52utz5ksopgrpiuoj5k
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:9992): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b38cb3740f4f19c0cb43cb29b21c179c98640d44ded22c0cf796302381a2082d]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
b8h3jswom4ai7je902f6zo89f
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
xsd1mivqdf1y45ydbma7akau4
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:11320): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [9404d1962ac2d23c4b04c50ac0adbd714f11bfe8165d12c8bb69136ded666cfc]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
r0rg3x1f6iy56uju8ts0rjvog
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
xw665dz90e5dl2s898wcwhcnr
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:12698): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 5s (36.1 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [22d085b5222fde24282fb09edded6e1518b64fc820dfddfc6d777cfeafff8d8f]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
vq35rbxkqbjewwqq0jqhv340g
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
kwwrlnuuk6nnb3qfhwsiw0b5l
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:14033): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (312 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [5bdc16f492822842f255cdbc5ef3935459c402ea3d05c4e51c2cbf9c51c4bb28]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
n9igzgliy2wouh0137aq0ua63
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
1c3d1jqoo375haxt0hh81jiyc
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:15362): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (297 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [22ba2487ac87176a994d4b5def5daa737cdbca2e5e1fc231aeeadef4289c1a99]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
gwwr75crw2chjo30wue824q3h
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
z6xiwkmlttcynjz2v0duex0oz
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
unknown option -- n
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:7 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]

** (appstreamcli:16753): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 5s (36.7 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b242c8361b4d4c50e63ae0c339d3ae79b7e31903d7a703bf51f143fb5ba26104]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
yo7uu8hutewydsbzybnwizeu5
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
4p05e9hq9tf1kk7nkn3jvhu2f
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:18175): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (289 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [42c769da0e7f104403604080d1a111bf2c8489c4d90ee49097b887110d42fb9f]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
d7y0egpjqoch7a9l80okq0oel
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
8h6m1adgtgqe2ye5ljre33zf5
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:19478): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (327 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [eafa5d0b14cc301bc35d73606a793c6b61e2b709a6c33e4a98fe97e34a397f73]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
w018t76kv9dawflyzr6u4gb4l
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
lsst0mki1qr3sgemqybtjvcdq
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:20880): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (284 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [1c6f360b7938509e234ec3850e32224929254be39fbf499e0e1d7a6e879774eb]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
vpao3rcyi620w3o7eak46rylz
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ukqcruosr500zrmwve862xkye
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:7 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:8 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [308 kB]
Get:9 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.4 kB]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [72.2 kB]
Get:11 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [224 kB]
Get:12 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:13 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [80.2 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [191 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [272 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,892 B]

** (appstreamcli:23773): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 1,475 kB in 1s (877 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0e1a5e5025f29b7d096570ee15085cb476e71196a2631f7804c7186e387109fa]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
cqw256pnej462w99m35da9zid
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
th4gjpulhfvo962fn7q11jvgn
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
unknown option -- n
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:25447): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 2s (94.9 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [5dbb5f47d4acdc590a23826832a3e15ef9e4581a86817600e5536b02e91f2f6b]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
g90fi1uq92jkscvqmucfu7mex
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
5rk1vagrjeeickus7rk62q1b5
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
cp: cannot stat ''$'\n''  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no': No such file or directory

  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no: No such file or directory
-r: No such file or directory
scp: protocol error: expected control record
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:26795): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (286 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [3ee81a90fe7c591318499ea4f8f3579c09ec851d34cc14b2194ad336915a237e]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
lkngx14zi9oc6370xnqkf9qom
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
95n93v46d3jj3pu61giuefrgo
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:28223): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (115 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [cd8485262efc0d7b8e0511e54b298a88fd0f28bb4c25b066fe68368027168b62]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
uavyc0na72h1berj9trg7s1qe
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
yd0gngrn21ill2g4nvnu7uy89
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:29520): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (329 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [a66de4c8cd6d776935c5ebbd0d2a1db3a83a1cbd94ae28b0d13fbc33bd51f173]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
lkprl19gj9udnhxih2yedmzmc
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
kdq12tni8s41ptr90gpnw7j5y
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
ssh not supported
ssh-copy-id not supported
Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
ssh not supported
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:30959): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 11s (18.1 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [fdd76331433063e41342f8cb244f451675952b817139ff1452349b0857e60ddc]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
eoxjz4dkvbwce0ufoauwde64y
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
uxrnj1yuu429iggcvio706cyn
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:32312): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (208 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [d6db5c16c89dcbf9ad5b1823ca2b62d0bc62b934665ba37516baa789f50b252a]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
haqck6i34wi5evnw0kpn20ppi
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
jkulj4he25bjlzvd9xcjohtoy
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]

** (appstreamcli:1163): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (103 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0a4be3e4fa32f6c40ea06cbb8ec754e85866b4cdd7935ddb74fbef565268ce9d]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
1uvn10sf8o0o47m1e2inwv204
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
5qn9i1jvzbt71fhli652mzmk0
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: ERROR: Too many arguments.  Expecting a target hostname, got: '/home/pi/.ssh/id_rsa.pub' 'ubuntu@192.168.2.215'

Usage: /usr/bin/ssh-copy-id [-h|-?|-f|-n] [-i [identity_file]] [-p port] [[-o <ssh -o options>] ...] [user@]hostname
	-f: force mode -- copy keys without trying to check if they are already installed
	-n: dry run    -- no keys are actually copied
	-h|-?: print this help
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:2692): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (299 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [1c99c36ce73af70fcc6e5c0533cd7e69cc1c2c635faa13b658aa5c0c5dcce3fa]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
ryyas4mqrc6960vayvg9vpl1c
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
phdztcj05krjoeftf2nry4ltm
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:4001): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 2s (90.9 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [5c259e7d11418f261a76cf046b09698c5cd5895c0a82e911b4afd2be3d69a4db]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
cb4iodkcmoulquaw2b31mh4ef
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
80902y8k1t6f1l8q3px3ypllx
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:5571): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (326 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [05c6bcb879a1d2773a3bb3f17ff08022a6383a7d054dda1c34e2b0ca6e8c530b]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
ksizr294v93hx84dbkwzk2u8c
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
j3fomjb82g2un14phyj938cfy
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:6882): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (301 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [4ede7b82cfd54e63708066fb5ec2d1e073b29a70024d8e67860114387aedea69]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
4gi9b62hqiqbsyx003lgr2u8k
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ppxif48l0qj0890x3p4y9l2g3
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:8253): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (309 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [370fbc4c85c634d0f59ba3ffbf0d736c4a5d42644a49b73ca9060a16f3203141]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
a0uww33z07meth6tdjaaaqbb1
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
seasgn227fc1uhf5hag4e6j29
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
=-=-=-=-=-=-=-=
Would have added the following key(s):

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJA/1gRKpmfyqvaxboJ4WszCuif1AChNRJ4rWHm6Z6Kpsinf7eEErNA39IcnmE0QUsYoi4HVu8rVly1CyszI5Whz2R21LkdWsVzf3uAlEs33iXpFdPhIhQzshLY4d9nL9Gq3nJs/NvTJG8XIOe0aDataedXe8VHTpPptJJ7iaijJB6Nh0vZKjwp+c52utfsGbMZlcZdYyG4IsYEbmuGu7oqn0il2jVi0Ga2b+BF75m4TXAzlLvaVQiJOvY5sE81u6NiEPMuhG1+15/Cbz8htQL3+MAdEHw7SpcqnkKlITQtCKJiLVvAzfSt1T9nXrUpm9UQe4GbZFUcr1mGFO816AJ pi@raspberrypi
=-=-=-=-=-=-=-=
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:9652): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (307 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [6f1a3f45f52187c344eabc7a6c54c380776fb55264c040524cbc433121d5a9cc]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
3iw4dbkc2e1tgg4dj3rsw0jkd
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
0isq50h5qxr57gb9r5u51s1k4
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.


  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r: No such file or directory
scp: protocol error: expected control record
Removing all keys associated with pi-docker from authorized_keys
Hostname: pi-docker was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i /pi-docker/d ~/.ssh/authorized_keys: No such file or directory

  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r: No such file or directory
scp: protocol error: expected control record
Removing all keys associated with ufw from authorized_keys
Hostname: ufw was not in authorized keys or the file doesn't exist
setup.sh: line 11: sed -i /ufw/d ~/.ssh/authorized_keys: No such file or directory

  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r: No such file or directory
scp: protocol error: expected control record
bash: ./clean_home_dir.sh: No such file or directory

  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r: No such file or directory
/home/pi/rpi_cluster/docker/assets: not a regular file
scp: protocol error: expected control record
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [27cc6a3a08dd71c23ba5ee74a36f2258ad2c674499a1a9c5e5ed83128fb5c4c0]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
hef8wku48mgb4phlifanyhcvd
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest

  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r: No such file or directory
scp: protocol error: expected control record
wlqq71e5id590dfb7hgx9ij0e
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:12048): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (310 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [06a54f322699ee1a93bc0d244b965ac3d0526597f438748bfc9855a4481fd597]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
rqqjv4i0qvld6nwiblpxa08nu
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
n9amzyk6zyvlfq4bjy1570094
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
=-=-=-=-=-=-=-=
Would have added the following key(s):

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDvFJOt2VkVx3JFmk+4Vc4dgp4O/tbtTs3TSkLV4RSH9LrQjuwdWYtJqBZ4yr8R62MdwWPQdv4wN3dbIwZgxjHoT4eeqSAg2afNW/FW3FhfGARb2TVlOOPZahlzfYO0xjsiDoBMVDhXCh7ofFitip5t1AaTOYrvjzuEMVFyugOkNtqWi2PHtvt6o7WhPMgVI8vcxxe6v9HgzfJpHG/svr0oDs6fxaz7YirB9kmA/Y43VFa322syHdes05euUudRrilLPouf58h7IIZjEBsYYj4p13tjO8SiTTakfN7MlJcPMY7e1lY/E9/gi6SsSAchOQPXFSi5ojZS74nHr+4NXzdL pi@raspberrypi
=-=-=-=-=-=-=-=
unknown option -- n
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
=-=-=-=-=-=-=-=
Would have added the following key(s):

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCfqJ5P2lR4xZ0KVQ3q9J1crtjYNRWqzgDQLmdfwp1ifr6pzJceiz6DEmFslASWJQNW/ffzvp2ti8SQf8s7G3cJggMZlsM4xTyN8ZmIOaLpIS1DqtMPln2WkY7PE4YE3cfNFBCShxR+nu8o6Jb6oE4X4JV6XkYX5AtBtutDomBpicamAQclUgIqDKKkL58W0KqJsdJvJ1tWGU58/xrekLzdzQhdkRINJm/AGCGwrWi0nUtIC3yDH09gLBC9cPI1fTlnNUFcp2QnJR28enaPnt4VxAM5tEMhWgqnHkdfr/2iP/907FE9UGOBg5aImYB0Iruw1fJGo0ctRxNbqEfup7hn pi@raspberrypi
=-=-=-=-=-=-=-=
unknown option -- n
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:13471): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (296 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b4d512f8288be49f8c8535634d83cf882213270b2ad2e4d575bd9cd0a29441b7]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
pnl4yc6fxfp95cn310abi7fth
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
poqvi66jzxwf9a1smiadbjavm
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:14978): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (313 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [f37adebeb270bfe3f3870d645bd5d978a00be67296ab7cca9b0f3c952cbf0d59]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
bwahbtqcj31oev7fe7swy58oj
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
tn207pwuojgx235udrg51r25a
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:16260): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (292 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:16887): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (296 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
assets
docker_service.sh
docker.sh
setup.sh
removed '/home/ubuntu/assets/manager'
removed '/home/ubuntu/assets/worker'
removed '/home/ubuntu/assets/user'
removed '/home/ubuntu/assets/portainer'
removed '/home/ubuntu/assets/ips'
removed '/home/ubuntu/assets/networks'
removed '/home/ubuntu/assets/services'
removed '/home/ubuntu/assets/images'
removed '/home/ubuntu/assets/volumes'
removed '/home/ubuntu/assets/secrets'
removed '/home/ubuntu/assets/clean'
removed '/home/ubuntu/assets/password'
removed '/home/ubuntu/assets/hostname'
removed '/home/ubuntu/assets/leader'
removed directory '/home/ubuntu/assets'
removed '/home/ubuntu/docker_service.sh'
removed '/home/ubuntu/docker.sh'
removed '/home/ubuntu/setup.sh'
ubuntu
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:17430): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (312 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [6f718ac4419deec9bb708bf9e3de4b6affa4cfcac66e907d284b3f709e192c4a]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
53kx9irzq0b3apmvgbfi8vnso
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
b25m1229m8niebwlye14q5z1h
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:18751): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (313 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
assets
docker_service.sh
docker.sh
setup.sh
removed '/home/ubuntu/assets/manager'
removed '/home/ubuntu/assets/worker'
removed '/home/ubuntu/assets/user'
removed '/home/ubuntu/assets/portainer'
removed '/home/ubuntu/assets/ips'
removed '/home/ubuntu/assets/networks'
removed '/home/ubuntu/assets/services'
removed '/home/ubuntu/assets/images'
removed '/home/ubuntu/assets/volumes'
removed '/home/ubuntu/assets/secrets'
removed '/home/ubuntu/assets/clean'
removed '/home/ubuntu/assets/password'
removed '/home/ubuntu/assets/hostname'
removed '/home/ubuntu/assets/leader'
removed directory '/home/ubuntu/assets'
removed '/home/ubuntu/docker_service.sh'
removed '/home/ubuntu/docker.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [42d99d86d9a2128f5718a73e68d709b18dc8462b1549d725009360d0ea17960b]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
nmhuzufwn14ga5z59qht3sh1p
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
tl0accwr02dv53fu9cnbwbr02
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:20076): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (290 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
assets
docker_service.sh
docker.sh
setup.sh
removed '/home/ubuntu/assets/manager'
removed '/home/ubuntu/assets/worker'
removed '/home/ubuntu/assets/user'
removed '/home/ubuntu/assets/portainer'
removed '/home/ubuntu/assets/ips'
removed '/home/ubuntu/assets/networks'
removed '/home/ubuntu/assets/services'
removed '/home/ubuntu/assets/images'
removed '/home/ubuntu/assets/volumes'
removed '/home/ubuntu/assets/secrets'
removed '/home/ubuntu/assets/clean'
removed '/home/ubuntu/assets/password'
removed '/home/ubuntu/assets/hostname'
removed '/home/ubuntu/assets/leader'
removed directory '/home/ubuntu/assets'
removed '/home/ubuntu/docker_service.sh'
removed '/home/ubuntu/docker.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [8cfb0b8c98a74c609833184e00a46e4d9c785d75dcacc7d2a58d38daf14ad120]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
9bt6kpyz0zax40b3vdrl4y6wv
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
mxvc5uj6qjm0nv4zp805o0jsr
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:21385): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (314 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
docker.sh
setup.sh
removed '/home/ubuntu/docker.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [32d43bf3df523aca5e13ab4939f3e58271f94c2eb1be471af277e23171f9abf8]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xnc2lq11xz1gw0rcg90vip8cs
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ixiy6gcg752qyh8cazsdods3m
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:22824): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (295 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
docker_service.sh
setup.sh
removed '/home/ubuntu/docker_service.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b0d0631f5e2524a50ece4b0a92750bb19104d4bfb5c33a0ec03f75b9a067f981]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
iisrywos5follysxl4hn9j8c2
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ywvhwt4km5ktahz3pbpy90zgt
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:24119): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (310 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
'/home/ubuntu/assets' -> '/tmp/assets'
'/home/ubuntu/assets/leader' -> '/tmp/assets/leader'
'/home/ubuntu/assets/hostname' -> '/tmp/assets/hostname'
'/home/ubuntu/assets/password' -> '/tmp/assets/password'
'/home/ubuntu/assets/clean' -> '/tmp/assets/clean'
'/home/ubuntu/assets/secrets' -> '/tmp/assets/secrets'
'/home/ubuntu/assets/volumes' -> '/tmp/assets/volumes'
'/home/ubuntu/assets/images' -> '/tmp/assets/images'
'/home/ubuntu/assets/services' -> '/tmp/assets/services'
'/home/ubuntu/assets/networks' -> '/tmp/assets/networks'
'/home/ubuntu/assets/ips' -> '/tmp/assets/ips'
'/home/ubuntu/assets/portainer' -> '/tmp/assets/portainer'
'/home/ubuntu/assets/user' -> '/tmp/assets/user'
'/home/ubuntu/assets/worker' -> '/tmp/assets/worker'
'/home/ubuntu/assets/manager' -> '/tmp/assets/manager'
removed '/home/ubuntu/assets/manager'
removed '/home/ubuntu/assets/worker'
removed '/home/ubuntu/assets/user'
removed '/home/ubuntu/assets/portainer'
removed '/home/ubuntu/assets/ips'
removed '/home/ubuntu/assets/networks'
removed '/home/ubuntu/assets/services'
removed '/home/ubuntu/assets/images'
removed '/home/ubuntu/assets/volumes'
removed '/home/ubuntu/assets/secrets'
removed '/home/ubuntu/assets/clean'
removed '/home/ubuntu/assets/password'
removed '/home/ubuntu/assets/hostname'
removed '/home/ubuntu/assets/leader'
removed directory '/home/ubuntu/assets'
'/home/ubuntu/docker_service.sh' -> '/tmp/docker_service.sh'
removed '/home/ubuntu/docker_service.sh'
'/home/ubuntu/docker.sh' -> '/tmp/docker.sh'
removed '/home/ubuntu/docker.sh'
'/home/ubuntu/setup.sh' -> '/tmp/setup.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [c52fbc06942eedb705b7d08cd83e73af01d39ec24b8e9a31b4c39aee40320800]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
i6yxeotftxsbb4me70zuir8fb
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
kfzvyj1urzpv9k0k6kh21a889
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:25389): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (311 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
'/home/ubuntu/docker_service.sh' -> '/tmp/docker_service.sh'
removed '/home/ubuntu/docker_service.sh'
'/home/ubuntu/docker.sh' -> '/tmp/docker.sh'
removed '/home/ubuntu/docker.sh'
'/home/ubuntu/setup.sh' -> '/tmp/setup.sh'
removed '/home/ubuntu/setup.sh'
mv: inter-device move failed: '/home/ubuntu/assets' to '/tmp/assets'; unable to remove target: Directory not empty
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [e4c00210ab07aca355be0600c46daa24c280ef1afc746188799283463e3139a5]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
ck9jueh2vkcc0ojg1z5bec4op
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
riqkggzitze9cuf0vpxxw4m1q
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:26652): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (322 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
mv: inter-device move failed: '/home/ubuntu/assets' to '/tmp/assets'; unable to remove target'/home/ubuntu/docker_service.sh' -> '/tmp/docker_service.sh'
removed '/home/ubuntu/docker_service.sh'
'/home/ubuntu/docker.sh' -> '/tmp/docker.sh'
removed '/home/ubuntu/docker.sh'
'/home/ubuntu/setup.sh' -> '/tmp/setup.sh'
removed '/home/ubuntu/setup.sh'
: Directory not empty
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0c8b1a5625d979c79be2688d6f585bddd4231970a539e94261901f13a8ce2598]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
zwkmpegiif999hp2hq1vylwtc
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
xt5g0uu0ntilllbpy5k30dean
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:27939): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (315 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed '/tmp/assets/manager'
removed '/tmp/assets/worker'
removed '/tmp/assets/user'
removed '/tmp/assets/portainer'
removed '/tmp/assets/ips'
removed '/tmp/assets/networks'
removed '/tmp/assets/services'
removed '/tmp/assets/images'
removed '/tmp/assets/volumes'
removed '/tmp/assets/secrets'
removed '/tmp/assets/clean'
removed '/tmp/assets/password'
removed '/tmp/assets/hostname'
removed '/tmp/assets/leader'
removed directory '/tmp/assets'
removed '/tmp/config-err-GJp51O'
removed '/tmp/docker_service.sh'
removed '/tmp/docker.sh'
removed '/tmp/setup.sh'
removed '/tmp/unity_support_test.0'
rm: cannot remove '/tmp/systemd-private-f6fbf5f457f84515aae8d4b3d519fd66-colord.service-6Tuyra': Operation not permitted
rm: cannot remove '/tmp/systemd-private-f6fbf5f457f84515aae8d4b3d519fd66-rtkit-daemon.service-MSoHLd': Operation not permitted
rm: cannot remove '/tmp/systemd-private-f6fbf5f457f84515aae8d4b3d519fd66-systemd-timesyncd.service-i9NL30': Operation not permitted
'/home/ubuntu/assets' -> '/tmp/assets'
'/home/ubuntu/assets/leader' -> '/tmp/assets/leader'
'/home/ubuntu/assets/hostname' -> '/tmp/assets/hostname'
'/home/ubuntu/assets/password' -> '/tmp/assets/password'
'/home/ubuntu/assets/clean' -> '/tmp/assets/clean'
'/home/ubuntu/assets/secrets' -> '/tmp/assets/secrets'
'/home/ubuntu/assets/volumes' -> '/tmp/assets/volumes'
'/home/ubuntu/assets/images' -> '/tmp/assets/images'
'/home/ubuntu/assets/services' -> '/tmp/assets/services'
'/home/ubuntu/assets/networks' -> '/tmp/assets/networks'
'/home/ubuntu/assets/ips' -> '/tmp/assets/ips'
'/home/ubuntu/assets/portainer' -> '/tmp/assets/portainer'
'/home/ubuntu/assets/user' -> '/tmp/assets/user'
'/home/ubuntu/assets/worker' -> '/tmp/assets/worker'
'/home/ubuntu/assets/manager' -> '/tmp/assets/manager'
removed '/home/ubuntu/assets/manager'
removed '/home/ubuntu/assets/worker'
removed '/home/ubuntu/assets/user'
removed '/home/ubuntu/assets/portainer'
removed '/home/ubuntu/assets/ips'
removed '/home/ubuntu/assets/networks'
removed '/home/ubuntu/assets/services'
removed '/home/ubuntu/assets/images'
removed '/home/ubuntu/assets/volumes'
removed '/home/ubuntu/assets/secrets'
removed '/home/ubuntu/assets/clean'
removed '/home/ubuntu/assets/password'
removed '/home/ubuntu/assets/hostname'
removed '/home/ubuntu/assets/leader'
removed directory '/home/ubuntu/assets'
'/home/ubuntu/docker_service.sh' -> '/tmp/docker_service.sh'
removed '/home/ubuntu/docker_service.sh'
'/home/ubuntu/docker.sh' -> '/tmp/docker.sh'
removed '/home/ubuntu/docker.sh'
'/home/ubuntu/setup.sh' -> '/tmp/setup.sh'
removed '/home/ubuntu/setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [87532cf2671b81189a54a1a83b1e098d9e7bd256545663e7310a67f1e6309e06]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
ryyqzg1yt2k8erplr3a837m8w
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ry36cszyxneq9zalb22lt38mc
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.4 kB]
Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [716 kB]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [72.2 kB]
Get:11 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.3 kB]
Get:12 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [80.2 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [308 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [224 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [582 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [190 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [269 kB]
Get:18 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,892 B]

** (appstreamcli:29427): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 2,771 kB in 1s (1,715 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
mkdir: invalid option -- 'r'
Try 'mkdir --help' for more information.
mv: target './garbage' is not a directory
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [7795e76a06de9f0f644a80324db87a05248299f7e15a6e0c5728a14840b09337]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
z2bqzx4pu0y0o72wc6jatkkwt
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
8tesy0skptmpolhrin6dp3pt4
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:30749): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
mkdir: invalid option -- 'r'
Try 'mkdir --help' for more information.
mv: target './garbage' is not a directory
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [29ea441c8391e1efa606bf886dc2bdeab52173e43c460d0544137920cd2009da]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
nr2vxyl1dwfzz3od7cfjxps84
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
5l8b3y39actnyliui86datbko
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:32024): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
mkdir: invalid option -- 'r'
Try 'mkdir --help' for more information.
mv: target './garbage' is not a directory
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:32571): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
bash: mkdir-p: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:748): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed 'garbage/a'
removed 'garbage/b'
removed 'garbage/c'
removed 'garbage/d'
removed 'garbage/e'
removed 'garbage/f'
removed 'garbage/g'
removed 'garbage/h'
removed 'garbage/i'
removed 'garbage/j'
bash: mkdir-p: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:1337): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed 'garbage/a'
removed 'garbage/b'
removed 'garbage/c'
removed 'garbage/d'
removed 'garbage/e'
removed 'garbage/f'
removed 'garbage/g'
removed 'garbage/h'
removed 'garbage/i'
removed 'garbage/j'
bash: mkdir--parents: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:1966): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed 'garbage/a'
removed 'garbage/b'
removed 'garbage/c'
removed 'garbage/d'
removed 'garbage/e'
removed 'garbage/f'
removed 'garbage/g'
removed 'garbage/h'
removed 'garbage/i'
removed 'garbage/j'
'/home/ubuntu/assets' -> './garbage/assets'
'/home/ubuntu/docker_service.sh' -> './garbage/docker_service.sh'
'/home/ubuntu/docker.sh' -> './garbage/docker.sh'
'/home/ubuntu/setup.sh' -> './garbage/setup.sh'
mv: cannot move '/home/ubuntu/garbage' to a subdirectory of itself, './garbage/garbage'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:2563): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `shopt -s extglob; rm -rvf garbage/*; mkdir --parents garbage; mv -v ~/!(garbage) garbage'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 http://security.ubuntu.com/ubuntu xenial-security InRelease

** (appstreamcli:3125): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `shopt -s extglob dotglob; rm -rvf garbage/*; mkdir --parents garbage; mv -v !(garbage) garbage; shopt -u dotglob'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:3653): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `shopt -s extglob dotglob; rm -rvf garbage/*; mkdir --parents garbage; mv !(garbage) garbage; shopt -u dotglob'
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:4508): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
docker0   Link encap:Ethernet  HWaddr 02:42:79:6d:a0:86  
          inet addr:172.17.0.1  Bcast:172.17.255.255  Mask:255.255.0.0
          inet6 addr: fe80::42:79ff:fe6d:a086/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:3384 errors:0 dropped:0 overruns:0 frame:0
          TX packets:4998 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:6429542 (6.4 MB)  TX bytes:567776 (567.7 KB)

docker_gwbridge Link encap:Ethernet  HWaddr 02:42:cb:dc:56:9d  
          inet addr:172.18.0.1  Bcast:172.18.255.255  Mask:255.255.0.0
          inet6 addr: fe80::42:cbff:fedc:569d/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:725 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:122743 (122.7 KB)

enp2s0    Link encap:Ethernet  HWaddr f8:bc:12:85:99:ef  
          UP BROADCAST MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:13758 errors:0 dropped:0 overruns:0 frame:0
          TX packets:13758 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:1449717 (1.4 MB)  TX bytes:1449717 (1.4 MB)

veth6f6a967 Link encap:Ethernet  HWaddr c6:8d:bf:d4:2c:bd  
          inet6 addr: fe80::c48d:bfff:fed4:2cbd/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:7 errors:0 dropped:0 overruns:0 frame:0
          TX packets:47 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:3389 (3.3 KB)  TX bytes:6053 (6.0 KB)

vethce31c2c Link encap:Ethernet  HWaddr 4e:3a:f1:86:9e:cb  
          inet6 addr: fe80::4c3a:f1ff:fe86:9ecb/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:86 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:12325 (12.3 KB)

wlp3s0    Link encap:Ethernet  HWaddr 90:48:9a:8a:af:9d  
          inet addr:192.168.2.215  Bcast:192.168.2.255  Mask:255.255.255.0
          inet6 addr: fe80::7149:56b6:4076:a067/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:954984 errors:0 dropped:0 overruns:0 frame:0
          TX packets:448273 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:1101941100 (1.1 GB)  TX bytes:64747422 (64.7 MB)

garbage
setup.sh
/home/ubuntu
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:5227): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
/home/ubuntu
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:5804): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:6356): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
mv: cannot stat './expect.sh': No such file or directory
mv: cannot stat './util.sh': No such file or directory
setup.sh
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:6973): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
bash: clean_workspace.sh: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:7536): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:8093): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [21f2a4f490668e942f9a02ccd7f1d2090d54baacc63682949a71035f9c095ccd]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
n1am6r0ycmvh3662lmq1gg5t4
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
x023sdbcntcv0jaxy459a03gv
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:9392): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [76ff83f80fab3e6c998c29f957c568c70d2eac82ddd5e9b8ec0aaea36b910b60]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
5ell6e9kz3wx6xhor1ucb50ld
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
j5u0aehkiu2om0u5lb9uwf38o
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
ssh: Could not resolve hostname 
  -o loglevel=error   -o connecttimeout=5   -o identitiesonly=yes   -o userknownhostsfile=/dev/null: Name or service not known
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:10958): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [4d4a4aaec7f5a35a52d7c97279fbc39ad04f0a5ab6253de7af26ec487520c02a]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
nq895112b64o22a96ozn6r47t
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
33vm7934g5rp3ur1l64fqxzdb
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:12261): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
/home/pi/rpi_cluster/docker/assets/ /home/pi/rpi_cluster/docker/docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
bash: ./docker.sh: No such file or directory
Error response from daemon: rpc error: code = Unknown desc = name conflicts with an existing object
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:13201): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [8194ac74a0505d46856d8f80207bb2b7888998a60027c9989dad970ef134243f]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
geg1iwdtnfqh6myf5ce09mnwf
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ydm8vwiyf11k25lqvcixpno2a
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:14497): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [90612257aa93af0d34ffc5ce159d8dd9942167db0d7dee9579532760a3b397fc]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
n6jdzxx580vd0z2j28itnlylu
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
vgt1usghelawi9v46b1abayks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 http://security.ubuntu.com/ubuntu xenial-security InRelease

** (appstreamcli:15803): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [70d4ea1cac6de9b9b12adfbc1142a870d8e6a10d5683ca65eeb67116389d224d]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xo2czf22txaa84bkhtckk2h11
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
fku7sx9wot8yzkjvwkz0lzb1v
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:17100): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b123dd32f818f967a406b535d2e57515eb5ce46047cb4db7a20918ec7af4ce95]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
rgx5ojsjx8rb8uxw52n1w2dmd
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
l1u6phwfjh7lw41kx6iy51g3x
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:18406): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [503def1c19ab14acaa4a9a6b277dbf8a55a1fa97d0ee85acf56dab88b8135a41]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
9czts6esqmkrareyxge0rgii1
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
lzqyzroxw20ny18yt4vu8sddh
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:19705): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [2374e3bac2168f9dda1e6322e2f47ec50d695af0eab01d589994d23503ee96da]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
rnwsul1auki0z6ndf5m0k4h8f
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
87k6p2pp0zu4h36tainatadka
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:21048): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (104 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [b6bd86746f3ec25889b3a1610d6dd4e1cca18b5c1b884ad212e009d436841a91]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
klx86oksda24oeykkk1vbz1ko
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
lubxwl66mwy6boh5fnd94efym
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:22363): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (307 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [e5a4cfd418396fb460b2deb9e216bfcfff7fae3793d59084e4cda22f5461aeeb]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
jesf5tkjauj8mv0o2v69i23hz
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
oes3pl2rrt4g4lis7ja3gx1yv
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:23669): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (319 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [dabcd1268df80cb13fd7284e84624ef32efbe16f1197fe28d1fab8790c6291ec]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xnc1n7q5fmej76tz6kr2ke72d
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
fsh0l6d904esdx0swfv6csd09
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:24978): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (296 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [e7f7e5010ea57bd20c48108ab4ab60e731b4bb8b53e36eec43d8bfcd0bf7bf06]
Volume: portainer was not removed or failed
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
xb81tohk9vrkzz6acsid5wpom
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
ycq7d8ibk2wlgyxps3fw2johf
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
scp /home/pi/rpi_cluster/ssh/setup.sh not supported
ssh ./setup.sh  not supported
ssh-copy-id -i /home/pi/.ssh/id_rsa.pub not supported
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:26311): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (317 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [0145ac297c9dc2795b317de7b0264f357d73ffbeca1bda3b53be99bf89a1b434]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
x2s5fvuy696w3plz8q4g5vjez
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
mu2h8svbe9jldnllascljlzqn
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:27622): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (312 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing services listed in: assets/services
portainer
portainer
Service: portainer removed
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error response from daemon: unable to remove volume: remove portainer: volume is in use - [8bc8116c63594eb7766b18154d11121ac875f5c7964d3f1e43f11d3f23f3021e]
other_volume
Volume: other_volume was removed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD removed
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
qun9ljj1b3v5nkpd601anp51o
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
nyuc8rc551g5hx0fzkt3xtf8k
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:28930): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (312 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:29447): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (318 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:30016): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (308 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 354 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 354 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31404): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31841): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:953): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (315 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2268): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2650): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:4258): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (284 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5718): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:6099): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wz1j5p6ehq9ygrcs0gp3pz24r) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-476053uej1awphmivv56cbc7joeer0kh60gqad9z3k2q6farqq-40jfariq3adxraqcu7d9xg7v6 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:8755): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9136): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (hsqgetvizn42vle0bv1h6u1im) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5mcqclrpxzc5px8s0kmi8h7h7s2uso1mvfg2c32k27vlzkqsod-ch805wnulhcoin3xksmpkrokl 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:11903): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12284): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (mb8yyllccqrdgahd4afhcfuhp) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3irli3j0wk2njy4ke7hz4mwcu280ezd5jnzj0v6zhdksudba2w-6vt25lp6smnhp94xd34hynmbz 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:14945): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15326): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (p53uv0w0u9jfywx70exbukrdy) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1ssssmlvo6cvcc98a2nvs8ie6fqs2lvaisqtfn80e2bnxu3mc7-cu6k1n9mmdouhbu25ut4xz1oe 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:17976): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:18357): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (moba5psq4ab5kzftlextmqmqv) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2i588ztpr4pfgkop5hdud5jnnxl853w45o2ikf6sqq7y9bjz24-76hst8k7l5921twzwii2phrxt 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:20973): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:21354): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (moii43csocnceie0xjb6lfmxl) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3pfmdm9icrp827ykyskah6447rnz6w58bsrjqh95ivyhf6l4so-e8qkyal295xn4wdd5zussf7c5 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24013): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24394): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (ruf29diajyk8nszp3qx9d569f) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-23m4zwmn3o1pdviav1rwb02ujadfzmr59wl56qb83ugsu1kiyx-7meborggb24yzo2xt7cmofzzs 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:27347): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:27732): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (4ghuwmxv72e8g3mqu33rantn2) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4ecel4hfkhdr0yxo9x9755wdfxgevnkgseou1vk5k2d3rjxrjh-cp78sbdgw9wrsa0voug5i407h 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:30389): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:30770): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (k85zx6rygn0fwp7rxtzodxjhk) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4k42akfkyploewcu8wgzf92okswsz5f9ik5e7idkvhxin2gne7-8pqbvp5c5s68uhemlsuicovtd 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:923): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:1311): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (j9wdw6nmql3p0sfb4p50j2l70) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4x52josbl1lzku5mgxjv3zco9q9qt2zxp28gvux5bwp5g6u00a-7n7dt66o1tpvf799g0qukrr2k 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:3995): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:4496): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (qct3o5mwiokke39smgm3q3rs5) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5ymkov218txsylzcr289w20ko3fcp0ms0u6d412rj7zpxe2vt8-60alzh0mzgfvz78sh81am2d8r 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:7245): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:7626): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wb1eh12eq5d1ofns8d8683v6p) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3b8bcve90467qtvmfsxbsrr08jz2kcf6ir4u35vph5f0lx8cxc-8i83pkgz80o2z2pt618q92hy0 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:9510): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (197 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:10813): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:11195): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (rtuxtfbxxjhellhbsiheydq62) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-6d3u7p08icnpz0mfezxc7ejca2stqybjxi0ol2fpxebkm0k6j1-7aajzppbdsfx0oobvq45w34oo 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Error: No such secret: PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
2m7arxrwvob1bhxgt51cql8ah
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
y4gyqfiy1iykz3nfi9rdrukta
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:14738): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15119): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wkl9tsoa2k03qnmfv4rwdxem6) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-45l9tofwu2saucbfo2phiy260wcs4fuk42wshsyt2ub0x5dhci-d9hhh52b7bazd0qgcm56d8ino 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:17045): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (306 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:18340): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:18721): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (u8e54yvt5r4zrdatwm87efdf2) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4rlo0f8mfaqqtn2erkqpz0sm73ckyq6hhcu4zlbgaitqj4p6z2-4hcdjwmpszth3r7oqa8uhw57t 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
u7zs0hqtu2nl37qv3395xz1as
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
nua8jc9adm5o9odtw2zausr1z
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:21364): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (300 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:22728): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:23109): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (5b33z5w40ihh6ok68xue0xhwe) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-073e6ays88t3pyd6g0vgazuwodo9umxe3rhmttqabdmt55fhee-bwtzxwvb8c3k5r69y1exr1lmu 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:24967): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (315 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:26257): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:26638): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (vx2rb2bnfus3djqet1tvbe1db) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-6byfs8u2m5q0gunby6q5csaafd2jm21d643jw3bmewl0o3r0c5-damd0iy8er958xuzztzhd0fqf 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:28514): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29813): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:30194): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (sel75misy0904k5wl8dots8ei) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1kot57cquak9j2oxnlslysymyk6ta9uepotqy6o7suzi6xc7e5-2t8uwyzxi369anuosp2z73rgu 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:32091): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:917): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:1305): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (50w6ezwj3xkry6zg8rzcx5cc9) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-37e9bf3qb04hhai95o32798c06r16xp336n8358e1iwn7y9q7l-eojpowuvs11ii26y4r5mtkwhu 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Error: No such secret: PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
b64pltkqywsd0htomso88u8nz
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
dym4jd3mlxemdcrrxxafvsa1b
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:4028): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5626): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:6007): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (gyftoqcxnn228qbk66vvji3ge) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3wi65f0w6jzftzuwnq9ugofm5h0m5fsqu6gtazhm2tfw58c42t-9gg62zpylbk7b42c6871olex5 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
tcje36nwdzzhvf7hyq2ufohdu
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
zh0odlwqrlbfyknqzy676fzql
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:8716): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:10107): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:10489): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wxhp9b7lfvtq3lp58ewilykz2) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-06rvg4r8erbe62xquybqppqxzn41fur16lw17vam113ioq9xi8-67migldf065vt0pzt5bejrz3t 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error: No such volume: portainer
Volume: portainer was not removed or failed
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Error: No such secret: PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
kjg1dmj98syi1lupvo06780yx
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
4jrv87gjg53qdrvnvdcz6zbl5
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:13452): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:14817): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15198): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (cj58gmj1sk1hngmo80gg5y1f3) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4ubdjwg2oqcsebzl50jeg3h0egdjwau5d96ycuko1he6n2pzbu-7oyj5qrqzga7jp7xkww2y6qpj 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Error: No such secret: PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
ld9gl063npeo70wifdaa51ilv
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
qojseze9ta6pnomils6w9ibq1
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:17846): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:19202): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:19583): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (hwbalpx8znddvq40dhnmj0rd8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2v4ai5crlcg5qbjxe3oz3x2abj57wlyujkkrmvl004z51wzy87-8dqi9ppfw2e7tygtw79zkhp26 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:21465): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:22751): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:23132): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (ukpx0we09b9q2n8xyj3s7xr5x) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2770s8skvrw3ew7pygukxpqiqte1hi5nclt1elnn64s6py0c97-bxe0j6pbfei2hzt454mv9lmcm 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:25804): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:26187): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (0yoybo56g4yqlydxv9ncoewr0) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4xngdjr8r5fwfxj9ymkiw3u2lim3e0xjzvrw4gn2dh534lmuhc-696onl676xwwqq6pdr2dr0bhv 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
ubuntu@192.168.2.215 /home/pi/rpi_cluster/docker/assets/ manager_join_token.sh worker_join_token.sh
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:28822): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29203): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (qsq4zfg7ko9xlyfl88419a3o4) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-51bzbey7jdekvenetpflwxp2lqb0iu4gx1uzls6w7ctp4nzcem-9kdmmh2ik8p3os5eftmjvcrmk 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
manager_join_token.sh worker_join_token.sh
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31891): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:32272): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (lzjn9szderw1hvclcc14gwuh4) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1b86ficqfs57zozm5sufdlcc1rqrcnhseio7s8a5kmki6s1gdc-975qb5omsakchh7ahe7vkiro6 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
scp 
  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r ubuntu@192.168.2.215:manager_join_token.sh /home/pi/rpi_cluster/docker/assets/
scp 
  -o LogLevel=error   -o ConnectTimeout=5   -o IdentitiesOnly=yes   -o userknownhostsfile=/dev/null   -o stricthostkeychecking=no -r ubuntu@192.168.2.215:worker_join_token.sh /home/pi/rpi_cluster/docker/assets/
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2498): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2880): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (rfvw5h5e6gy3fyemgnmnkr9un) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3pnhogxzx8bc2577d0yvwu6mym4o7b5trxypuhm152c1brnuis-b8mwbxlen36edsi3c6x44alnz 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5813): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:6194): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (g8h3jaa0hzwa5y13ijv2cttnv) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5ligenp78i6hapfe55i4r435k2uwomkt82ni8hx3xgf44afyex-e3py230cripdu5va9nhydwfs7 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:8874): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9255): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (11sn2zg8313y6sqhi4u6pl37e) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1jkyoipxzqwc43kc2cgp2irkkfn2m2ygs8ym5jvb28z84qohou-002tuu231fgqrrv1jlunq9v5p 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:11872): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker
./setup.sh: line 53: docker: command not found
Docker is not installed
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: docker: command not found
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12276): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12657): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (9lhxij5hqwf8s6wgqg64zkcr6) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5q98hhgv6p66k133e3bt6c143ziwi9jbceotnva7j0gm827d39-36d2lo1o963fld4r15djc5p2m 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
usage: scp [-12346BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]
           [-l limit] [-o ssh_option] [-P port] [-S program]
           [[user@]host1:]file1 ... [[user@]host2:]file2
./temp_script: line 2: -o: command not found
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15287): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15670): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (iwevydbyc27qhfe343cjprqk6) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-489x8ikwj6hh050xx95numm22gbxvwvby3w24vhtqp2opns2sm-6mkusa3sasgr9rlje025ud04t 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:17522): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:18817): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:19199): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (jsvripkpc0924hpb3ot203zcu) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-11h8zfxfch8hhfout2nju5amqa1jczld7rxfhk3vzbt5vwnlgf-b72nx502o5kyfudsymm939kp0 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Error: No such volume: other_volume
Volume: other_volume was not removed or failed
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
jaqrx44375jimitg6gkv8f9k8
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
src6z554e628t7w7lhngouhqi
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:21811): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:23177): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:23558): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (j4wht5d62vwmn5tlrbmm7nof0) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2pn37jx07iiqupz3pb6v405elf2awbc6dr66t26y1utdabtt8o-6nuav5ru70f64pty71mdy23tu 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
chmod: cannot access 'temp_script.sh': No such file or directory
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Error: No such secret: PORTAINER_PASSWORD
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
iobs5vn97c3plxr4wgyh4n8qf
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
vz6y77uuw3skzybex4iaqubfd
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:26237): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:27604): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:27985): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (7fv6z47lb0gdhddgfjidvot7a) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5kkl9vosb1oetw8fxefbe7mj93sffnrwss1drejxf3wrr09wq3-9s4q254hvy55cyyj7vj3nt588 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:29803): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31091): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31472): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (oforikvcz3dgawojckg2onl5v) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2kset2blh428j59m49mnykxucn1wqjms8yna7pn40a87dvkjo2-9wdikslv1ua9b6v6rngu8byxz 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:862): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2227): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2608): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (smamt80trspxuyirv79f5b0ta) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-27jpd73gwq8npw0uf15d8zgdv8gvs29ai335sp1djs4hvrwugt-201u68qscrff4v1b6iiinjk91 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:4650): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Purging docker
Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5983): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:6364): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (28gpfbtza1piafda7zz5mhsti) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4l25aq6uxf2ioq8xpzjwv6cmck7dux4ffuhhfjxjh2jtnt5j4o-audzkk2v8noroe2zhgcmes25t 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error: No such volume: portainer
Volume: portainer was not removed or failed
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
k3dzenj4pwidrlh9cxpsw7zn7
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
tv3mqtaausnleakwn9b4axxfk
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:9052): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
bash: ./: Is a directory
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:10413): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:10795): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (hj1r54i50tpl60yo9bt6en2r1) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2texsxxkv7gje9zyk3wc8gl7hlj4fd2lhti1i6ip1110k445v3-4bcjbn9r70ceec7tw32xl1b8x 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: ./: Is a directory
Removing services listed in: assets/services
portainer
Error: No such service: portainer
Service: portainer could not be removed, or does not exists
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
nx3jzjkl4ztz0x2yy5xc5l1nx
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
ot11o4mctpqj7be5p4rg4drde
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:13705): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15108): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15489): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (gcdnjjl6z4pw58m7b78ylf7lg) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1pktjegz0r35z28rjaw35lmh7x73dmnymu7d8m64kid28e8bgq-92u6ea8anoafq9gjzf479fag4 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Error: No such service: portainer
Service: portainer could not be removed, or does not exists
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
eudqybryb2w2mx74f991r3ss0
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
whk133jbbnq103l7nh7ida5yn
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.4 kB]
Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [716 kB]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [77.2 kB]
Get:11 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:12 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [80.2 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [308 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [219 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [582 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [191 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [272 kB]
Get:18 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,892 B]

** (appstreamcli:18301): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 2,774 kB in 1s (1,641 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:19677): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:20058): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (w4baxhwlek2v2q8d6o86lwx5b) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4z35y8ssrcsvc859fnyy0bcx5yucty50saqlbm6lqywmboc5gp-etnv1mlr6dzdepfo0x0ub47vb 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Error: No such volume: portainer
Volume: portainer was not removed or failed
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
bhpsaosic9ri5wxprpcq2x8df
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
x7p61qeokc83y98y1aitfpvoc
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:22728): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Purging docker
Reading package lists...Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24092): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24473): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (5uf35kdwpt0nxtw9yxop28rwh) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-69meo1e2am1q4zuzoqdvvj9nlxp6t509vv3xap0zaiys1xnep1-a755xiy3b4hsqu3xxz7jnvp85 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Error: No such service: portainer
Service: portainer could not be removed, or does not exists
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
p69di4f2diy2d6ybfkafrbsf9
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
o0h4fv88oaub3yulbppgvpcz8
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
Reinstalling docker
Uninstalling docker
./setup.sh: line 63: is_installed docker > /dev/null: No such file or directory
Docker is not installed
Installing docker locally
Checking if docker is already installed
Downloading install script from docker.com
./setup.sh: line 25: is_installed docker > /dev/null: No such file or directory
# Executing docker install script, commit: 1d31602
Warning: the "docker" command appears to already exist on this system.

If you already have Docker installed, this script can cause trouble, which is
why we're displaying this warning and provide the opportunity to cancel the
installation.

If you installed the current Docker package using this script and are using it
again to update Docker, you can safely ignore this message.

You may press Ctrl+C now to abort this script.
+ sleep 20
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
./setup.sh: line 7: docker: command not found
Docker is not installed
Installing docker locally
Checking if docker is already installed
./setup.sh: line 7: docker: command not found
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:28332): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:28713): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Checking if docker is already installed

Usage:	docker COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "/home/ubuntu/.docker")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default
                           "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  config      Manage Docker configs
  container   Manage containers
  image       Manage images
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  secret      Manage Docker secrets
  service     Manage services
  swarm       Manage Swarm
  system      Manage Docker
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Checking if docker is already installed
./setup.sh: line 9: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
./setup.sh: line 53: docker: command not found
Docker is not installed
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: docker: command not found
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31617): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:31998): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (r2gafxekjtcmv5zn33pq8xvwa) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-14my2doiow0bvd00c7yohjv4w7xz5jztmnj9o4vwloyisvumdm-6i0si0egioeu2jywelj5th95h 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2249): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:2630): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (bj66hc3jrxlhan62v9i22x1lj) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2udxarjmb5n5ht9ty9gcq4uxtph0cahl2r6a7cmkfcmccu29c0-040jqhtf6so6kciwlnknftg6b 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
./setup.sh: line 27: conditional binary operator expected
./setup.sh: line 27: conditional binary operator expected
./setup.sh: line 27: conditional binary operator expected
removed './clean_workspace.sh'
removed './setup.sh'
./setup.sh: line 27: conditional binary operator expected
./setup.sh: line 27: conditional binary operator expected
./setup.sh: line 27: conditional binary operator expected
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Docker is already installed
Leaving swarm
This node was not part of a swarm or could not leave
./setup.sh: line 92: docker: command not found
Initializing swarm, advertising ip: 192.168.2.215
./setup.sh: line 116: docker: command not found
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
Package 'docker-ce' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
Removing left over files
Installing docker locally
Docker is already installed
Leaving swarm
This node was not part of a swarm or could not leave
./setup.sh: line 92: docker: command not found
Initializing swarm, advertising ip: 192.168.2.215
./setup.sh: line 116: docker: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:6447): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
Package 'docker-ce' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
Removing left over files
Installing docker locally
Docker is already installed
Leaving swarm
./setup.sh: line 92: docker: command not found
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
./setup.sh: line 116: docker: command not found
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:7156): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Docker is not installed
Installing docker locally
./setup.sh: line 53: docker: command not found
./setup.sh: line 15: docker: command not found
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:7565): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:7947): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (cezrytgjrx4quoja8p5mtddfx) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4dtyb6qwbds6439jwozcexsecm5e6mpu23lhlpvu21f2p0d9ua-ezhlvi402qi16py5xibg1lv67 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
Creating docker secrets listed in: assets/secrets
eqzg7qk5k5jgerky79h7c6p6j
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
osjy2eehwblf7t4zwehblb99h
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:10757): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
415a2107f65e        portainer/portainer:latest   "/portainer -H unix:…"   5 minutes ago       Up 5 minutes        0.0.0.0:9000->9000/tcp   portainer.cezrytgjrx4quoja8p5mtddfx.3bb0qcra86gqpstycn9z19pua
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12114): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12495): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:13015): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
Docker is not installed
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 53: docker: command not found
./setup.sh: line 15: docker: command not found
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13424): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13806): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:15268): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (l2j8x5297vgdkcogo7q5hv025) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-07fl8jzgyx4nex6a8d8e5z650zzgvhkiq8nx8vow4yb3ekq2ez-ewlgw4md8w7ljcjeaadoaoh55 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing volumes listed in: ./assets/volumes
Volume: portainer was not removed or failed
Error: No such volume: portainer
Volume: other_volume was not removed or failed
Error: No such volume: other_volume
Removing networks listed in: assets/networks
Network portainer was did not exist or failed
Error: No such network: portainer
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Creating volumes listed in: assets/volumes
portainer
other_volume
Creating networks listed in: assets/networks
"docker network create" requires exactly 1 argument.
See 'docker network create --help'.

Usage:  docker network create [OPTIONS] NETWORK [flags]

Create a network
Creating docker secrets listed in: assets/secrets
kwkr0lbfxsc43ca7tn7id38vf
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
d1e017099d17: Pulling fs layer
a23d8e6a837b: Pulling fs layer
d1e017099d17: Verifying Checksum
d1e017099d17: Download complete
d1e017099d17: Pull complete
a23d8e6a837b: Verifying Checksum
a23d8e6a837b: Download complete
a23d8e6a837b: Pull complete
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Downloaded newer image for portainer/portainer:latest
mbf0piupj7gopocn1pzuept0l
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:17037): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Installing docker locally
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
6f37bce02b25        portainer/portainer:latest   "/portainer -H unix:…"   2 minutes ago       Up 2 minutes        0.0.0.0:9000->9000/tcp   portainer.l2j8x5297vgdkcogo7q5hv025.ypui2mmekfe07ejrahytxaour
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (dt3nju3q36herq0wihwzb2fuy) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5m9y3tqwim92qd33x6esebguldkd00bwqgmh652rpvy2d2w6a4-bil06b8vdjw1gyvs4uo7524ob 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing containers associated with images listed in: ./assets/images
Total reclaimed space: 0B
Removing volumes listed in: ./assets/volumes
portainer
Volume: portainer was removed
other_volume
Volume: other_volume was removed
Volume: third_volume was not removed or failed
Error: No such volume: third_volume
Removing networks listed in: assets/networks
Network portainer was did not exist or failed
Error: No such network: portainer
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Secret: ANOTHER_SECRET could not be removed, or does not exists
Error: No such secret: ANOTHER_SECRET
Secret: YET_ANOTHER could not be removed, or does not exists
Error: No such secret: YET_ANOTHER
Creating volumes listed in: assets/volumes
portainer
other_volume
third_volume
Creating networks listed in: assets/networks
"docker network create" requires exactly 1 argument.
See 'docker network create --help'.

Usage:  docker network create [OPTIONS] NETWORK [flags]

Create a network
Creating docker secrets listed in: assets/secrets
jbwtquoh2xwoy9wj88t2oug7m
3kjp460ce16yncbk5kl07z2z2
urh6fdtcul9xbdxpzmf4mcg65
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
latest: Pulling from library/postgres
723254a2c089: Pulling fs layer
39ec0e6c372c: Pulling fs layer
ba1542fb91f3: Pulling fs layer
c7195e642388: Pulling fs layer
95424deca6a2: Pulling fs layer
2d7d4b3a4ce2: Pulling fs layer
fbde41d4a8cc: Pulling fs layer
43a0cfa9789d: Pulling fs layer
371d656a7cd4: Pulling fs layer
6b98f92bd478: Pulling fs layer
1899e8510879: Pulling fs layer
5d421aa09a81: Pulling fs layer
8423a5b1da74: Pulling fs layer
43a0cfa9789d: Waiting
371d656a7cd4: Waiting
6b98f92bd478: Waiting
1899e8510879: Waiting
5d421aa09a81: Waiting
8423a5b1da74: Waiting
c7195e642388: Waiting
95424deca6a2: Waiting
fbde41d4a8cc: Waiting
ba1542fb91f3: Verifying Checksum
ba1542fb91f3: Download complete
c7195e642388: Verifying Checksum
c7195e642388: Download complete
95424deca6a2: Verifying Checksum
95424deca6a2: Download complete
39ec0e6c372c: Verifying Checksum
39ec0e6c372c: Download complete
2d7d4b3a4ce2: Verifying Checksum
2d7d4b3a4ce2: Download complete
fbde41d4a8cc: Verifying Checksum
fbde41d4a8cc: Download complete
371d656a7cd4: Verifying Checksum
371d656a7cd4: Download complete
6b98f92bd478: Verifying Checksum
6b98f92bd478: Download complete
1899e8510879: Verifying Checksum
1899e8510879: Download complete
5d421aa09a81: Verifying Checksum
5d421aa09a81: Download complete
8423a5b1da74: Verifying Checksum
8423a5b1da74: Download complete
43a0cfa9789d: Verifying Checksum
43a0cfa9789d: Download complete
723254a2c089: Verifying Checksum
723254a2c089: Download complete
723254a2c089: Pull complete
39ec0e6c372c: Pull complete
ba1542fb91f3: Pull complete
c7195e642388: Pull complete
95424deca6a2: Pull complete
2d7d4b3a4ce2: Pull complete
fbde41d4a8cc: Pull complete
43a0cfa9789d: Pull complete
371d656a7cd4: Pull complete
6b98f92bd478: Pull complete
1899e8510879: Pull complete
5d421aa09a81: Pull complete
8423a5b1da74: Pull complete
Digest: sha256:92f5c1043096c56119f5d4a71a5ca382f652a4d02b814f6970c0021031422a2d
Status: Downloaded newer image for postgres:latest
latest: Pulling from library/mysql
f49cf87b52c1: Pulling fs layer
78032de49d65: Pulling fs layer
837546b20bc4: Pulling fs layer
9b8316af6cc6: Pulling fs layer
1056cf29b9f1: Pulling fs layer
86f3913b029a: Pulling fs layer
f98eea8321ca: Pulling fs layer
3a8e3ebdeaf5: Pulling fs layer
4be06ac1c51e: Pulling fs layer
920c7ffb7747: Pulling fs layer
9b8316af6cc6: Waiting
1056cf29b9f1: Waiting
86f3913b029a: Waiting
f98eea8321ca: Waiting
3a8e3ebdeaf5: Waiting
4be06ac1c51e: Waiting
920c7ffb7747: Waiting
78032de49d65: Download complete
837546b20bc4: Verifying Checksum
837546b20bc4: Download complete
9b8316af6cc6: Verifying Checksum
9b8316af6cc6: Download complete
86f3913b029a: Verifying Checksum
86f3913b029a: Download complete
f98eea8321ca: Verifying Checksum
f98eea8321ca: Download complete
1056cf29b9f1: Verifying Checksum
1056cf29b9f1: Download complete
4be06ac1c51e: Download complete
920c7ffb7747: Verifying Checksum
920c7ffb7747: Download complete
3a8e3ebdeaf5: Verifying Checksum
3a8e3ebdeaf5: Download complete
f49cf87b52c1: Verifying Checksum
f49cf87b52c1: Download complete
f49cf87b52c1: Pull complete
78032de49d65: Pull complete
837546b20bc4: Pull complete
9b8316af6cc6: Pull complete
1056cf29b9f1: Pull complete
86f3913b029a: Pull complete
f98eea8321ca: Pull complete
3a8e3ebdeaf5: Pull complete
4be06ac1c51e: Pull complete
920c7ffb7747: Pull complete
Digest: sha256:7cdb08f30a54d109ddded59525937592cb6852ff635a546626a8960d9ec34c30
Status: Downloaded newer image for mysql:latest
szjxs4iy3pujrwzmz9tulxry1
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:19749): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Installing docker locally
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
d4df803c7503        portainer/portainer:latest   "/portainer -H unix:…"   36 seconds ago      Up 34 seconds       0.0.0.0:9000->9000/tcp   portainer.dt3nju3q36herq0wihwzb2fuy.o77amjbuvd53p4fxlp9dmymyl
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (2rt89yvyxye1wkgwcdv7y37lj) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-31xn1bp0a0grogwkgpd9vng03uvuza2cfg99uqqjy6jvl8td47-3lrh7dqhvu2mz4tbfaq8swmhn 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing services listed in: assets/services
portainer
Service: portainer could not be removed, or does not exists
Error: No such service: portainer
Cleaning up old volumes, images, containers specified in assets/clean
Removing containers associated with images listed in: ./assets/images
Total reclaimed space: 0B
Removing volumes listed in: ./assets/volumes
portainer
Volume: portainer was removed
other_volume
Volume: other_volume was removed
third_volume
Volume: third_volume was removed
Removing networks listed in: assets/networks
Network portainer was did not exist or failed
Error: No such network: portainer
Removing secrets listed in: assets/secrets
Secret: PORTAINER_PASSWORD could not be removed, or does not exists
Error: No such secret: PORTAINER_PASSWORD
Secret: ANOTHER_SECRET could not be removed, or does not exists
Error: No such secret: ANOTHER_SECRET
Secret: YET_ANOTHER could not be removed, or does not exists
Error: No such secret: YET_ANOTHER
Creating volumes listed in: assets/volumes
portainer
other_volume
third_volume
Creating networks listed in: assets/networks
"docker network create" requires exactly 1 argument.
See 'docker network create --help'.

Usage:  docker network create [OPTIONS] NETWORK [flags]

Create a network
Creating docker secrets listed in: assets/secrets
kd39e5ohq41g8r7grrwegxw0k
p2e48eu3896z4nmgcws7mhdq5
rovr5dd4kj40x1a84jq0ep06c
Building images listed in: assets/build
No images to build
Pushing to docker hub images listed in: assets/push
No images to push
Pulling images listed in: assets/images
latest: Pulling from portainer/portainer
Digest: sha256:ea22d362cba64fe0aec1641534812fef84e09e21bef05a2c761f7c7ec8d7185e
Status: Image is up to date for portainer/portainer:latest
latest: Pulling from library/postgres
Digest: sha256:92f5c1043096c56119f5d4a71a5ca382f652a4d02b814f6970c0021031422a2d
Status: Image is up to date for postgres:latest
latest: Pulling from library/mysql
Digest: sha256:7cdb08f30a54d109ddded59525937592cb6852ff635a546626a8960d9ec34c30
Status: Image is up to date for mysql:latest
i0v93f4olsqz55ek0g7q1gh3j
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:21882): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (258 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './assets/manager'
removed './assets/worker'
removed './assets/user'
removed './assets/portainer'
removed './assets/ips'
removed './assets/networks'
removed './assets/services'
removed './assets/images'
removed './assets/volumes'
removed './assets/secrets'
removed './assets/clean'
removed './assets/password'
removed './assets/hostname'
removed './assets/leader'
removed directory './assets'
removed './clean_workspace.sh'
removed './docker_service.sh'
removed './docker.sh'
removed './setup.sh'
Installing docker locally
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
cf2fc80137a5        portainer/portainer:latest   "/portainer -H unix:…"   15 minutes ago      Up 15 minutes       0.0.0.0:9000->9000/tcp   portainer.2rt89yvyxye1wkgwcdv7y37lj.rw8hd4g7y6dzfdhwjeiqyk43l
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (5caq0er8uowvbo31u9ipb3vew) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1ra78hjgd4280way1gdh9ps65rg2oezglty83564y9cfu0ugn6-5ft484wkej0k7ly08e3wwpzp4 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:22942): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (294 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (zqw1rmlajhyp6zuirl60x1ugp) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-50oksx8x1pd36cljz7skv3o33hb7eh3sn7spqiht1qscpvze6g-csp0mv9q5c5dvbktptfwszol2 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:23952): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (301 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (vrfb3lqu2o54ygq3fa86jgbni) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4tzjs70upjxe5aa7nzh7v965oi2m188f2oeci6dp0yddni651d-08l4uey216c7spfs6npk2bgwa 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: .//home/pi/rpi_cluster/docker/portainer.sh: No such file or directory
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:24946): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 1s (164 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wikdi2jwnp6l0hrjo4uviseeb) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2em1zn8czhd5b9xe2pe8h588qospwe05uct85a2elwle4tn389-es2rrca6ireev4hkp33zu8tag 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
bash: .//home/pi/rpi_cluster/docker/portainer.sh: No such file or directory
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:25984): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (248 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (yd8ggyu49sewdbt4ffp2xdkua) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-59e2a67iul6obmvpdk4hmkakkuexkcioyqc0mj25p2lfjt5x2p-4xntcm19s6o1idiacry590dvz 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
aaz0p72ctveayzb9xd1tf1z6g
y0u4edblvvvwokscc65638tqc
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:30497): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (335 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Installing docker locally
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Docker is already installed
Leaving swarm
Node left the swarm.
Successfully left swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (p6t7m5ytfesniglejlcv7e2ts) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-400hetahu10xayh2qwh371cq0g5ajjkfugjg2021ja5782alvq-eimill1ny6dvi7p669h9zmwbv 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
yojilwzwchu2ldj9ddn3wxb17
portainer
1mbjah3u6woqwiz2slsugs4f3
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:3160): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (314 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5424): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5805): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (msxexxuusmjvvmofx4uec6gs8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-27ijkub2968ki1abocqwxihu3si0pyotjwvmqe425vnc3qz8o2-3bxrwhrz4re642fhnu1lw4aot 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
kg050xohrd04o66302it51a0f
portainer
ba96h37yfsjdo0lfo028kz8k9
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:9944): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (308 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:11598): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:11979): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (flrobovwhdp1ecll9p43vmtfz) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-21bu87ztxcokhlmoi0cdnz4f8vhq0k6lub9s8l9rar9p46yn0g-bcbyilsvsatf0dtsr9vauexk4 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
kbjy8rqij3frtzhenawetujkh
v2pxzpqp4c6w7btsftfd0fz5z
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:14270): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 5s (36.3 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
35d9de9161a3        portainer/portainer:latest   "/portainer -H unix:…"   6 minutes ago       Up 6 minutes        0.0.0.0:9000->9000/tcp   portainer.flrobovwhdp1ecll9p43vmtfz.sustvm991pm1fqc993p8ae2lo
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:15645): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:16028): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (643dp63yb7ae4tkd13ms9hs6e) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2ouyyjkvp9nrldp40wunalftbq5t3lml5m3x5xlvpg27e24cn4-4k7a5v264cs4wcrlzv85oizgj 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
p06pylhpv08ppdbw8cz4glhbn
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
./setup.sh: line 85: -H: command not found
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:18325): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (266 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
04f8c2c7bff3        portainer/portainer:latest   "/portainer --admin-…"   7 minutes ago       Up 6 minutes        0.0.0.0:9000->9000/tcp   portainer.643dp63yb7ae4tkd13ms9hs6e.af67xhrms8uuxq15mfof4tomh
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:19687): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:20068): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (sfg5m5rd9h53o5b606otddgck) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-3bz95p8y779cts7bp8hi606jptc0hffj4khwyucjliyhjujd8n-712nz3wzy9iib1si6i8i4h2dn 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
g3om0s0ye70x9vzbocccj2xpv
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
overall progress: 0 out of 1 tasks
verify: Detected task failure
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:27459): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (307 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer_password_file'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29123): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29504): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (kcrhqhe19d0jfjx5d8i4rb3ri) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1levddzmjmu9x8vc34tuj6kov6lbesc35a1h5eo5gc42ilm217-0zxtxnllhvv38ly009wqypjf8 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
oif7n02d4haeu08w9byd4rsjl
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:31713): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (325 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer_password_file'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED              STATUS              PORTS                    NAMES
a686c98c788c        portainer/portainer:latest   "/portainer --admin-…"   About a minute ago   Up About a minute   0.0.0.0:9000->9000/tcp   portainer.kcrhqhe19d0jfjx5d8i4rb3ri.wfvtd0i6alx989djk84sbp7os
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:604): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:985): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (rvq2syjlmxzojgrb37sws80hb) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2upduaieskhps3oy79ezzstq4290py4etibikl1d6foaiwnnb0-5ses9ksscgo8xxf5k243pie51 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
i5ne6axxxzdq54u84066ykwhv
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:3296): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (309 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './portainer_password_file'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
c4656f1c0548        portainer/portainer:latest   "/portainer --admin-…"   4 minutes ago       Up 4 minutes        0.0.0.0:9000->9000/tcp   portainer.rvq2syjlmxzojgrb37sws80hb.ycjlr51s32pmrtl700fsn37w4
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:4927): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5318): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (fkx7j1x4ce2ls2t9ebydnu6k0) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-6c2y0rdhcn56za8re8frld2m9ycste2rmfy9j05bgpggp6tqcb-as7uveqsyijbqfu22tbv2kkvd 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
eygkau66w7v3m8260p52ah0wa
uy3lbx846kb0n1q3l482wfkeq
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:7596): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (284 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
d4cb7eb76ffc        portainer/portainer:latest   "/portainer --admin-…"   4 minutes ago       Up 4 minutes        0.0.0.0:9000->9000/tcp   portainer.fkx7j1x4ce2ls2t9ebydnu6k0.9429sn8bsst67wjg3921wuo06
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Warning: Stopping docker.service, but it can still be activated by:
  docker.socket
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:8992): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9373): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (ku4jshedu8yxmyyt3k4uyakgw) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1u956juuzbdmmetmm119bkxdtbkig2u39fctfh0hwtel2xo10b-dd0jmvmxwrkpp60q7seibdlan 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
u0d38ozmr4m3chhaxraao0hav
Error response from daemon: rpc error: code = InvalidArgument desc = ContainerSpec: " " is not a valid repository/tag
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:11332): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (317 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:12627): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13009): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (gjttjnwqv1amyzi1geluincvk) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-42hl5o078iyfxp2hngb3he4qa2fklboqro81u5cvlnkw32gzsl-6b11l2gauhb44h1xhi1ihqvvv 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
t7b4ktpcbk9ya84b00y6av1oi
Error response from daemon: rpc error: code = InvalidArgument desc = ContainerSpec: " " is not a valid repository/tag
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:14938): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (322 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:16236): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:16617): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (3jq9od4jayg7s4ot2rukmmtd5) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-43kvl7pnx9d7tbwm5wlvoc67pp55h71kf3n6g541iswk6y7da1-7d5ib3jw57rv4komfzatqpt39 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
i75c2b7t3ac1iqnd6jikiowe7
39rpcrbgl3k7qyeqr7wdgyhk8
image portainer/portainer:latest could not be accessed on a registry to record
its digest. Each node will access portainer/portainer:latest independently,
possibly leading to different nodes running different
versions of the image.

overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
3jq9od4jayg7: No such image: portainer/portainer:latest
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:18873): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (284 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
42152c72d4ab        portainer/portainer:latest   "/portainer --admin-…"   2 minutes ago       Up 2 minutes        0.0.0.0:9000->9000/tcp   portainer.3jq9od4jayg7s4ot2rukmmtd5.r1ismdrd31q9d4ul6a2b4r1ke
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:20231): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:20612): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (yu7dauz94wqp0v31djilwqzcl) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5oep6qrkk95kd76nk080sgadjgmss1vt98iu03qt3ue1gqmgq1-5dv9w4opwrdizrpgbjvgpynzg 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
w5fneioomlzyrt6jmcnrni9k1
en827d8j6imy0owykb8muq921
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:22952): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (314 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
e762e96b90a4        portainer/portainer:latest   "/portainer --admin-…"   9 minutes ago       Up 9 minutes        0.0.0.0:9000->9000/tcp   portainer.yu7dauz94wqp0v31djilwqzcl.sfjtz8ff7zvtzddsem81u4u3j
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24309): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:24690): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (7ujc1llhr273cky6ot85o2red) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-11flsvt1iz2mob628jeb21g3ywr0hznqk7ymjteb7if5vuk8e1-4tcbx4woldwibcjttgihjo2it 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
2akyrl81xt7xojuypi7o9x9s6
7l0wbnjp0kq7t97unwkfrwr98
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:26876): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (325 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:27406): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (281 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Get:4 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:27993): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (322 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './setup.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
189b39ea3581        portainer/portainer:latest   "/portainer --admin-…"   2 minutes ago       Up 2 minutes        0.0.0.0:9000->9000/tcp   portainer.7ujc1llhr273cky6ot85o2red.qanxd559zv40iwaguan88jxx6
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29369): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29750): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (kgy32k06yfnmjfgkhvlxeg50z) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2avazhy1rmndijsr47glmtwue8zty9yh5z41ufxd2ok2xbqg0e-by9ej2vwlzkk59pwa7hhpj5yk 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
ysb1kwjsk46dx263nub0knv6v
iyl1zmp8wrx61bctli9bo4jxo
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Get:6 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]

** (appstreamcli:32101): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 204 kB in 0s (275 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:934): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:1322): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (4obaub49dkh8petwgfvmkgb9g) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-36i7t5y9idtyivq40m83opzpeikt92tg408otd4p02z8n96t2q-3ohgt15xga2z39rbbamsxqd1r 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
of7vttyxyu2hcf92lqiu3srop
k4krp1nnsjrt2bttphps5ebie
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Get:5 http://security.ubuntu.com/ubuntu xenial-security InRelease [102 kB]
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Get:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [102 kB]
Get:8 http://security.ubuntu.com/ubuntu xenial-security/main amd64 DEP-11 Metadata [67.5 kB]
Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 DEP-11 Metadata [307 kB]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/main DEP-11 64x64 Icons [72.2 kB]
Get:11 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 DEP-11 Metadata [51.4 kB]
Get:12 http://security.ubuntu.com/ubuntu xenial-security/universe DEP-11 64x64 Icons [85.1 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial-updates/main DEP-11 64x64 Icons [221 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 DEP-11 Metadata [190 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe DEP-11 64x64 Icons [272 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 DEP-11 Metadata [5,888 B]

** (appstreamcli:3594): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Fetched 1,477 kB in 1s (1,191 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED              STATUS              PORTS                    NAMES
a6c0033f3151        portainer/portainer:latest   "/portainer --admin-…"   About a minute ago   Up About a minute   0.0.0.0:9000->9000/tcp   portainer.4obaub49dkh8petwgfvmkgb9g.9540psjpv1vdkwxeclmq6fbu9
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5185): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5572): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wc0z3458rx0bwgxx9fi0i4vvt) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-090jgz5xzkl5pei2gudpdlx96bgay4qfy2vi5m9b6h386nt60m-e6vr0vudnya20kg70gfxbph9s 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
kcxewo3iqnu2qyib4ezlx34b4
wi6famq3jwa9ka34d8gr2oj6z
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:7794): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED              STATUS              PORTS                    NAMES
f461445570b7        portainer/portainer:latest   "/portainer --admin-…"   About a minute ago   Up About a minute   0.0.0.0:9000->9000/tcp   portainer.wc0z3458rx0bwgxx9fi0i4vvt.u1lprpepa62c9126r1gnsw60d
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9170): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9552): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (hsh9xnghlbwo7q23ejobybngt) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0u6v68oyzttosmj6hb9um77jkzlfidfxxb70jqxmiryxdq24ic-2o7klzx3dz8132k3296dwbho6 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
eqmx0eg40wpmsd0ak95upp526
rozei4bewrbsgioelwbl616fy
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:11779): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
ec70a6d8129a        portainer/portainer:latest   "/portainer --admin-…"   3 minutes ago       Up 3 minutes        0.0.0.0:9000->9000/tcp   portainer.hsh9xnghlbwo7q23ejobybngt.2e2nf9pzshkak002cp1e8eg83
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13179): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13560): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (rbw1cd6ueuncr2cgat1j9vvkb) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1nt7m5m5loaq3kbx73vtzmsrrivebkjy7s5ekay31o3fyy6s4i-6127fp9k0yfmcae2330pjt8ts 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
limr3upkutt1few4gkz6ae343
xvqxwysiaungjujigxsjq058i
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Backing up original Samba config file
sudo: pdbedit: command not found
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:15808): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './smb.conf.original'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
2197b5cd763c        portainer/portainer:latest   "/portainer --admin-…"   57 seconds ago      Up 57 seconds       0.0.0.0:9000->9000/tcp   portainer.rbw1cd6ueuncr2cgat1j9vvkb.ntd3l5dg7e2eyw74r79uknpry
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:17205): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:17586): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (17qvxrwvp7zkwudmghimpfzjd) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1425ivawg62kzmtjn6gafdrltmo9aezdscozw9v52yi295e7zj-e61ub4amvh5qqcbdov6xou3fx 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
y7j1qzzdoin8y5yxgibtjkv9i
tj5d8a2m6lczpdl09t4tpu4n7
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:19866): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
9aed4842f84f        portainer/portainer:latest   "/portainer --admin-…"   5 minutes ago       Up 5 minutes        0.0.0.0:9000->9000/tcp   portainer.17qvxrwvp7zkwudmghimpfzjd.vwr1y01i2f8sfs5fj7fks228a
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:21236): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:21618): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (amoib1j03mm15aeegnez5y2e6) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5djluvuh4gzptaab47s0uqmwwy19slawcasm0ithggnfk1ejuf-3ev66e7s5oq2ymc5cf636e92q 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
kag14gk3vrw1h73owy8b2i1oq
ph4lcujy8rzewrdztatdc2bu7
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:23817): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED              STATUS              PORTS                    NAMES
4ce769cca5aa        portainer/portainer:latest   "/portainer --admin-…"   About a minute ago   Up About a minute   0.0.0.0:9000->9000/tcp   portainer.amoib1j03mm15aeegnez5y2e6.9qn4o6nfnafxx4836gvpicq2m
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:25178): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:25559): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (o38q4272yh3s3yh968zuozmao) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1jnjkn2p289klhp8vdeiomgsqo0vf03iqlyp0m29xh2vtzs1ht-53ma1by7vh5qmye9vaa7jr8ng 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
di2vi5flvf2fl5jsjt04a8hsp
o2292uv44ea5693sgojtbzxi2
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:27864): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
6753c005a28e        portainer/portainer:latest   "/portainer --admin-…"   7 minutes ago       Up 7 minutes        0.0.0.0:9000->9000/tcp   portainer.o38q4272yh3s3yh968zuozmao.j2onv24ztwcs5tnff7w2o2yen
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29223): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:29606): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (jdxh553qs9o6co5xw0wtiemjh) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-48yiqpw6prghyun7wfhm5r5tnw9dw209sh71q4yxf6a6oldcl1-c7z4q92yfdwi15a3lhqvt6zhx 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
0n1emfcrapku8vpoh528hmtnk
x79gbvozezxwfrnlppvjjnee5
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:31819): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED              STATUS              PORTS                    NAMES
3e80b386b151        portainer/portainer:latest   "/portainer --admin-…"   About a minute ago   Up About a minute   0.0.0.0:9000->9000/tcp   portainer.jdxh553qs9o6co5xw0wtiemjh.xrh53ym6tq13raz41dtji1g3d
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:729): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:1111): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
Error response from daemon: This node is not part of a swarm
This node was not part of a swarm or could not leave
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (m0bafidf1duj2qine4y42r4q1) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-21n4nj2ia8pg4bnronsi50w26wrvth6jjf8z6jno10porpw0lt-1uzr85vku6sq1fygknlfa50j6 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
99tftx3yg33jdjooptismsuq2
xq5srm8rdslnjuyb8ztd7vbp4
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 0 out of 1 tasks
overall progress: 1 out of 1 tasks
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 5 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 4 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 3 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 2 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Waiting 1 seconds to verify that tasks are stable...
verify: Service converged
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:3424): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:3931): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
03b4e3a2ef45        portainer/portainer:latest   "/portainer --admin-…"   5 minutes ago       Up 5 minutes        0.0.0.0:9000->9000/tcp   portainer.m0bafidf1duj2qine4y42r4q1.jmgwic4n9am9sshkuejjomi9r
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5569): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:5950): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (xp6khw06w317e9ma802sy5hre) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-53tbqfyvdp8o9l556euvoumkw89cktomukssqgr36s3w412195-9bjjsma3sphq22tvy31mxulmm 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
v5ahtkvdl7rz579xuccehi19f
lwqlp1v1c196m0dn3203ktsze
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:8177): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
b91870d68c8c        portainer/portainer:latest   "/portainer --admin-…"   2 minutes ago       Up 2 minutes        0.0.0.0:9000->9000/tcp   portainer.xp6khw06w317e9ma802sy5hre.jjxuc2lax60ywgefc438uizav
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9579): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:9960): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wc2ybm8ah6rkgeuqnydxxwsdq) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-57etm45iqklg7ibutqhqpngdsshdvyui08j075lo3u11ief1f9-68alvfpj5ze62kevq6rsr1oik 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
jbqk7oegyxnxq9shdjif9bjlm
1pgry6gtarb918dfhbiwv5z5i
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:12214): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
98b52d6911f5        portainer/portainer:latest   "/portainer --admin-…"   3 minutes ago       Up 3 minutes        0.0.0.0:9000->9000/tcp   portainer.wc2ybm8ah6rkgeuqnydxxwsdq.87knz5p1p1j5ub1g0rbirf7gm
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13585): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:13966): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (sq8dr3281r8y93ep3azjcxam2) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-05zx2yzhpjyw8spsz0iqf46w1gpjd7ndux7ezn25gkcbrqt76z-egcb1wzkuqft2x06g2j80m634 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
rlcihag04fe406mq8y2hmffbt
1gi69j7ys19c963g3utq33pav
Removing all keys associated with  from authorized_keys
Hostname:  was not in authorized keys or the file doesn't exist
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 https://download.docker.com/linux/ubuntu xenial InRelease
Hit:7 http://archive.ubuntu.com/ubuntu xenial-updates InRelease

** (appstreamcli:16154): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
d66477954285        portainer/portainer:latest   "/portainer --admin-…"   56 seconds ago      Up 55 seconds       0.0.0.0:9000->9000/tcp   portainer.sq8dr3281r8y93ep3azjcxam2.vdwpmhix0ec517gwjs18k1lsx
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
./setup.sh: line 15: /usr/bin/docker: No such file or directory
Downloading install script from docker.com
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:17519): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:17902): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (gt6f2gwgxdk6vs04f8lcj7864) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-65bb2qby2u36a2l2fizmxehop902bo79hqpjho267endnt26lf-0vlkr64vzfj5q2mdks8xuthqv 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
xcglp82ouvx5elfwjmu5rsgod
toyqnw9435y6hnt0v5cstx4kt
Removing all keys associated with  from authorized_keys
./setup.sh: line 11: sed -i //d ~/.ssh/authorized_keys: No such file or directory
Hostname:  was not in authorized keys or the file doesn't exist
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/pi/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'LogLevel=error' -o 'ConnectTimeout=5' -o 'IdentitiesOnly=yes' -o 'userknownhostsfile=/dev/null' -o 'stricthostkeychecking=no' 'ubuntu@192.168.2.215'"
and check to make sure that only the key(s) you wanted were added.

Setting up pi-docker-215
Changed hostname in /etc/hostname to pi-docker-215
Changed hostname in /etc/hosts to pi-docker-215
New Hostname: pi-docker-215
Ign:1 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial InRelease
Hit:2 cdrom://Ubuntu 16.04.3 LTS _Xenial Xerus_ - Release amd64 (20170801) xenial Release
Hit:4 http://security.ubuntu.com/ubuntu xenial-security InRelease
Hit:5 http://archive.ubuntu.com/ubuntu xenial InRelease
Hit:6 http://archive.ubuntu.com/ubuntu xenial-updates InRelease
Hit:7 https://download.docker.com/linux/ubuntu xenial InRelease

** (appstreamcli:20114): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
ufw is already the newest version (0.35-0ubuntu2).
sshpass is already the newest version (1.05-1).
0 upgraded, 0 newly installed, 0 to remove and 353 not upgraded.
removed './clean_workspace.sh'
removed './manager_join_token.sh'
removed './setup.sh'
removed './worker_join_token.sh'
Reinstalling docker
Uninstalling docker
CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                    NAMES
aaf7a970b6c7        portainer/portainer:latest   "/portainer --admin-…"   2 minutes ago       Up 2 minutes        0.0.0.0:9000->9000/tcp   portainer.gt6f2gwgxdk6vs04f8lcj7864.izbdc9zjg3kdrioe7mcmgej7k
Purging docker
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  docker-ce*
0 upgraded, 0 newly installed, 1 to remove and 353 not upgraded.
After this operation, 168 MB disk space will be freed.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 198177 files and directories currently installed.)
Removing docker-ce (18.02.0~ce-0~ubuntu) ...
Purging configuration files for docker-ce (18.02.0~ce-0~ubuntu) ...
Processing triggers for man-db (2.7.5-1) ...
Removing left over files
Installing docker locally
Downloading install script from docker.com
./setup.sh: line 15: /usr/bin/docker: No such file or directory
# Executing docker install script, commit: 1d31602
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:21483): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial edge" > /etc/apt/sources.list.d/docker.list
+ [ ubuntu = debian ]
+ sudo -E sh -c apt-get update -qq >/dev/null

** (appstreamcli:21865): CRITICAL **: Error while moving old database out of the way.
AppStream cache update failed.
+ sudo -E sh -c apt-get install -y -qq --no-install-recommends docker-ce >/dev/null
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin: 
+ sudo -E sh -c docker version
Client:
 Version:	18.02.0-ce
 API version:	1.36
 Go version:	go1.9.3
 Git commit:	fc4de44
 Built:	Wed Feb  7 21:16:33 2018
 OS/Arch:	linux/amd64
 Experimental:	false
 Orchestrator:	swarm

Server:
 Engine:
  Version:	18.02.0-ce
  API version:	1.36 (minimum version 1.12)
  Go version:	go1.9.3
  Git commit:	fc4de44
  Built:	Wed Feb  7 21:15:05 2018
  OS/Arch:	linux/amd64
  Experimental:	false
If you would like to use Docker as a non-root user, you should now consider
adding your user to the "docker" group with something like:

  sudo usermod -aG docker ubuntu

Remember that you will have to log out and back in for this to take effect!

WARNING: Adding a user to the "docker" group will grant the ability to run
         containers which can be used to obtain root privileges on the
         docker host.
         Refer to https://docs.docker.com/engine/security/security/#docker-daemon-attack-surface
         for more information.
Enabling docker daemon
Synchronizing state of docker.service with SysV init with /lib/systemd/systemd-sysv-install...
Executing /lib/systemd/systemd-sysv-install enable docker
Starting docker daemon
Enabling sudo-less docker
Finished Docker install process
Leaving swarm
This node was not part of a swarm or could not leave
Error response from daemon: This node is not part of a swarm
Initializing swarm, advertising ip: 192.168.2.215
Swarm initialized: current node (wax4tqa59hjc37cccqi9kqh0g) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-359c5zg2234d7y043d6d0n7fhp8ai6yxg66ldjazcd3agzdx5d-1qplww48xvnltjhtklcb4fafb 192.168.2.215:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Generating join tokens for joining the new swarm
Starting portainer
portainer
z91xds6x8osvnc6imli5qydy9
l63kacbocwo9nr1920ej8qfj0
